{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/AlternativeAffairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/AlternativeGreeting.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","AlternativeMessage","props","className","s","alt__message__wrapper","alt__content__wrapper","message","name__user","name","alt__text__message","data__message","time","src","avatar","MessageWrapper","useEffect","div","document","getElementById","scrollTo","scrollHeight","arrayMessage","allmessage","arrayData","map","data","Message","message__wrapper","content__wrapper","text__message","users","messageData","HW1","useState","currentUser","setCurrentUser","stateMessage","setStateMessage","wrapper","dialog__window","id","sendMessage","FormInput","textMessage","setTextMessage","onSubmit","e","user","text","date","length","sentObject","String","Date","toLocaleTimeString","preventDefault","onClickForm","wrapper__form","onClick","choose__user","value","input__text","type","onChange","target","onChangeInput","Affair","filter","deleteCallback","deleteAffairCallback","affair","priority","elements__affair__yellow","elements__affair_red","elements__affair_green","delete__button","_id","add__button","affairs","addCompletedAffairs","buttonValue","Affairs","mappedAffairs","a","mappedButton","filt","pressedButton","pressed","undefined","setAllFilter","setFilter","wrapper__content","wrapper__affairs","buttons","AlternativeAffairs","drawAffairs","wrapper__completed__affairs","completed__affairs","defaultAffairs","HW2","setAffairs","completed","setCompleted","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","not_error","fields__input","total__user","message__error","GreetingContainer","addUserCallback","setLog","setName","setError","currDate","alert","AlternativeGreeting","drawLog","log","error_log","success_log","wrapper__log","HW3","setUsers","generateUuid","newLog","SuperInputText","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","defaultStyle","errorInput","super__input","currentTarget","key","SuperButton","red","children","disabled","finalClassName","default","SuperCheckbox","onChangeChecked","checked","checkbox","HW4","setText","showAlert","setChecked","column","testSpanError","blue","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.558beeaf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__3-9-w\",\"dialog__window\":\"Message_dialog__window__3sk9b\",\"allmessage\":\"Message_allmessage__286p2\",\"message__wrapper\":\"Message_message__wrapper__2YZi7\",\"alt__message__wrapper\":\"Message_alt__message__wrapper__3W9yD\",\"content__wrapper\":\"Message_content__wrapper__1fKXS\",\"avatar\":\"Message_avatar__3ULno\",\"name__user\":\"Message_name__user__A5uhR\",\"message\":\"Message_message__1WM7E\",\"text__message\":\"Message_text__message__14Gx5\",\"data__message\":\"Message_data__message__E7N3O\",\"wrapper__form\":\"Message_wrapper__form__16eIJ\",\"choose__user\":\"Message_choose__user__n0Nsb\",\"input__text\":\"Message_input__text__2i8GB\",\"submit\":\"Message_submit__1rHvV\",\"alt__content__wrapper\":\"Message_alt__content__wrapper__3o3nW\",\"alt__text__message\":\"Message_alt__text__message__3xcc6\",\"alt__name__user\":\"Message_alt__name__user__2PTpf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__2eE1l\",\"wrapper\":\"Affairs_wrapper__2tJc9\",\"wrapper__content\":\"Affairs_wrapper__content__2eBl-\",\"wrapper__affairs\":\"Affairs_wrapper__affairs__1_3qD\",\"elements__affair_green\":\"Affairs_elements__affair_green__2dZAG\",\"elements__affair__yellow\":\"Affairs_elements__affair__yellow__34oEu\",\"elements__affair_red\":\"Affairs_elements__affair_red__gLYJ-\",\"buttons\":\"Affairs_buttons__2L42G\",\"wrapper__completed__affairs\":\"Affairs_wrapper__completed__affairs__3LT6z\",\"completed__affairs\":\"Affairs_completed__affairs__1khYz\",\"delete__button\":\"Affairs_delete__button__1w1A6\",\"add__button\":\"Affairs_add__button__2_4gA\",\"pressed\":\"Affairs_pressed__EIKMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1BxRw\",\"error\":\"Greeting_error__2lJkV\",\"not_error\":\"Greeting_not_error__1kgtj\",\"fields__input\":\"Greeting_fields__input__2CNou\",\"wrapper\":\"Greeting_wrapper__15qV-\",\"message__error\":\"Greeting_message__error__ciz28\",\"total__user\":\"Greeting_total__user__ooxq0\",\"error_log\":\"Greeting_error_log__3g3gz\",\"success_log\":\"Greeting_success_log__24dyE\",\"wrapper__log\":\"Greeting_wrapper__log__30P1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"super__input\":\"SuperInputText_super__input__2DXJr\",\"defaultStyle\":\"SuperInputText_defaultStyle__3CkL_\",\"errorInput\":\"SuperInputText_errorInput__3MDB-\",\"error\":\"SuperInputText_error__26gDK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__BwAT8\",\"column\":\"HW4_column__13XQN\",\"testSpanError\":\"HW4_testSpanError__104JX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__mHqMq\",\"red\":\"SuperButton_red__TGKjh\",\"disabled\":\"SuperButton_disabled__jbl7m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__UNYxR\",\"spanClassName\":\"SuperCheckbox_spanClassName__3gJ9S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3bCGj\"};","import React, {FC} from 'react'\nimport s from './Message.module.css'\nimport {MessageType} from \"./Message\";\n\nexport const AlternativeMessage: FC<MessageType> = (props) => {\n\n\n    return (\n        <div className={s.alt__message__wrapper}>\n            <div className={s.alt__content__wrapper}>\n                <div className={s.message}>\n                    <div className={s.name__user}>{props.name}</div>\n                    <div className={s.alt__text__message}>{props.message}</div>\n                </div>\n                <div className={s.data__message}>{props.time}</div>\n            </div>\n            <img src={props.avatar} className={s.avatar}/>\n        </div>\n    )\n}\n\n","import React, {FC, useEffect, useState} from 'react'\nimport s from './Message.module.css'\nimport {AlternativeMessage} from \"./AlternativeMessage\";\n\n\ninterface MessageWrapperType {\n    arrayData: Array<MessageType>,\n    currentUser: string\n}\n\nexport const MessageWrapper: FC<MessageWrapperType> = (props) => {\n    useEffect(() => {\n        let div = document.getElementById(\"window\")\n        if (div) {\n            div.scrollTo(0, div.scrollHeight)\n        }\n    })\n    const drawMessage = (arrayMessage: Array<MessageType>) => {\n        return arrayMessage.map(data => {\n            if (data.name === 'Alexander') {\n                return (\n                    <Message\n                        avatar={data.avatar}\n                        name={data.name}\n                        message={data.message}\n                        time={data.time}\n                    />\n                )\n            } else {\n                return (\n                    <AlternativeMessage\n                        avatar={data.avatar}\n                        name={data.name}\n                        message={data.message}\n                        time={data.time}\n                    />\n                )\n            }\n\n        })\n    }\n\n    return (\n        <div className={s.allmessage}>\n            {drawMessage(props.arrayData)}\n        </div>\n    )\n}\n\n\nexport interface MessageType {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nexport const Message: FC<MessageType> = (props) => {\n\n\n    return (\n        <div className={s.message__wrapper}>\n            <img src={props.avatar} className={s.avatar}/>\n            <div className={s.content__wrapper}>\n                <div className={s.message}>\n                    <div className={s.name__user}>{props.name}</div>\n                    <div className={s.text__message}>{props.message}</div>\n                </div>\n                <div className={s.data__message}>{props.time}</div>\n            </div>\n        </div>\n    )\n}\n\n","import React, {FC, ReactEventHandler, useState} from 'react'\nimport {MessageType, MessageWrapper} from \"./Message\";\nimport s from './Message.module.css'\nimport {AlternativeMessage} from \"./AlternativeMessage\";\n\ntype UsersType = {\n    name: string,\n    avatar: string\n}\n\nconst users = [\n    {\n        name: 'Alexander',\n        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    },\n    {\n        name: 'Guest',\n        avatar: 'https://a.d-cd.net/_gAAAgG9DOA-960.jpg',\n    }\n] as Array<UsersType>\n\nconst messageData = [\n    {\n        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n        name: 'Alexander',\n        message: 'some text',\n        time: '22:00',\n    },\n    {\n        avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n        name: 'Alexander',\n        message: 'some text',\n        time: '22:00',\n    }\n] as Array<MessageType>\n\n\nexport const HW1 = () => {\n    const [currentUser, setCurrentUser] = useState(users[0])\n    const [stateMessage, setStateMessage] = useState(messageData)\n    const sendMessage = (message: MessageType): void => {\n        setStateMessage([...stateMessage, message])\n    }\n    const changeUser = ():void => {\n        if (currentUser.name === 'Alexander') {\n            setCurrentUser(users[1])\n        } else {\n            setCurrentUser(users[0])\n        }\n    }\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n            <div className={s.wrapper} >\n                <div className={s.dialog__window} id=\"window\" >\n                    <MessageWrapper\n                        arrayData={stateMessage}\n                        currentUser={currentUser.name}\n                    />\n                </div>\n            </div>\n            <FormInput\n                currentUser={currentUser}\n                sendMessage={sendMessage}\n                setCurrentUser={changeUser}\n            />\n            <h4>Нажмите на Аватар чтобы сменить пользователя (AlternativeMessage)</h4>\n            <hr/>\n            <hr/>\n        </div>\n    )\n}\n\n\ninterface FormPropsType {\n    currentUser: UsersType,\n    sendMessage: (message: MessageType) => void\n    setCurrentUser: () => void\n}\n\nconst FormInput: FC<FormPropsType> = (props) => {\n    const [textMessage, setTextMessage] = useState('')\n    const onClickForm = (e: React.FormEvent, user?: string, text?: string, date?: string): void => {\n        if (textMessage.length) {\n            const sentObject: MessageType = {\n                message: textMessage,\n                name: props.currentUser.name,\n                avatar: props.currentUser.avatar,\n                time: String(new Date().toLocaleTimeString())\n            }\n            props.sendMessage(sentObject)\n            setTextMessage('')\n        }\n        e.preventDefault()\n    }\n    const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        setTextMessage(e.target.value)\n    }\n\n\n    return (\n        <form onSubmit={(e) => onClickForm(e)} className={s.wrapper__form}>\n            <div onClick={() => props.setCurrentUser()} className={s.choose__user}>\n                <img src={props.currentUser.avatar}/>\n            </div>\n            <input\n                value={textMessage}\n                className={s.input__text}\n                type=\"text\"\n                onChange={(e) => onChangeInput(e)}\n            />\n            <input type=\"submit\"/>\n        </form>\n    )\n}\n\n//\n//<div ={(e) => onClickForm(e)} className={s.submit}></div>","import React from 'react'\nimport {AffairType, FilterType} from \"./HW2\";\nimport s from './Affairs.module.css'\n\ntype AffairPropsType = {\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n    addCompletedAffairs: (affair:AffairType) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n    const setLigth = (filter:string):string => {\n        if (filter === 'middle') {\n            return s.elements__affair__yellow\n        } else if (filter === 'high') {\n            return s.elements__affair_red\n        } else {\n            return s.elements__affair_green\n        }\n    }\n    const deleteCallback = props.deleteAffairCallback\n    const addCallback = (affairs:AffairType):void => {\n        props.addCompletedAffairs(affairs)\n        props.deleteAffairCallback(props.affair._id)\n    }\n    return (\n        <div className={setLigth(props.affair.priority)}>\n            ({props.affair.priority}){props.affair.name}\n            <div className=\"buttons__affairs\">\n                <button\n                    className={s.delete__button}\n                    onClick={() => deleteCallback(props.affair._id)}\n                >X</button>\n                <button\n                    className={s.add__button}\n                    onClick={() => addCallback(props.affair)}\n                >+</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport s from './Affairs.module.css'\n\ntype AffairsPropsType = {\n    data: Array<AffairType>\n    setFilter: (filter:FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n    addCompletedAffairs: (affair:AffairType) => void\n    filter:FilterType\n}\n\nconst buttonValue = ['all' , 'middle' , 'high' , 'low'] as Array<FilterType>\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => {\n        return <Affair\n            key={a._id}\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n            addCompletedAffairs={props.addCompletedAffairs}\n        />\n    })\n    const mappedButton = buttonValue.map(filt => {\n        let pressedButton = props.filter === filt ? s.pressed : undefined\n        return <button className={pressedButton} onClick={() => setAllFilter(filt)}>{filt}</button>\n    })\n    const setAllFilter = (filter:FilterType) => {props.setFilter(filter)} // need to fix\n\n\n\n    return (\n        <div className={s.wrapper__content}>\n            <div className={s.wrapper__affairs}>\n                {mappedAffairs}\n            </div>\n            <div className={s.buttons}>\n                {mappedButton}\n                {/*<button onClick={() => setAllFilter('all')}>All</button>\n                <button onClick={() => setAllFilter('high')}>High</button>\n                <button onClick={() => setAllFilter('middle')}>Middle</button>\n                <button onClick={() => setAllFilter('low')}>Low</button>*/}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Affairs\n","import React from 'react'\nimport s from './Affairs.module.css'\nimport {AffairType} from \"./HW2\";\n\ntype AlternativeAffairsType = {\n    affairs: Array<AffairType>\n}\n\nfunction AlternativeAffairs(props:AlternativeAffairsType) {\n\n    const drawAffairs = props.affairs.map((data:AffairType) => {\n        return (\n            <li>\n                {data.name}\n            </li>\n        )\n    })\n\n    return (\n        <div className={s.wrapper__completed__affairs}>\n            <h6>Completed affairs</h6>\n            <div className={s.completed__affairs}>\n                <ul>\n                    {drawAffairs}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default AlternativeAffairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\nimport s from './Affairs.module.css'\nimport AlternativeAffairs from \"./AlternativeAffairs\";\n\nexport type FilterType = 'all' | 'middle' | 'high' | 'low'\n\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority: string\n}\n\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === 'all') return affairs\n    return affairs.filter(data => data.priority === filter)\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): any => { // need to fix any\n    return affairs.filter(data => data._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n    const [completed, setCompleted] = useState<Array<AffairType>>([])\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    const addCompletedAffairs = (affair:AffairType):void => {\n        setCompleted([...completed, affair])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <div className={s.wrapper}>\n                <Affairs\n                    data={filteredAffairs}\n                    setFilter={setFilter}\n                    filter={filter}\n                    deleteAffairCallback={deleteAffairCallback}\n                    addCompletedAffairs={addCompletedAffairs}\n                />\n            </div>\n\n            <hr/>\n            <AlternativeAffairs\n                affairs={completed}\n            />\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void\n    addUser: (name:string) => void\n    error: boolean\n    totalUsers: number\n}\n\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers}\n) => {\n    const inputClass:string = error ? s.error : s.not_error\n\n    return (\n        <div className={s.wrapper}>\n            <div className={s.fields__input}>\n                <input\n                    value={name}\n                    onChange={(e) => setNameCallback(e)}\n                    className={inputClass}\n                />\n                <button onClick={() => addUser(name)}>add</button>\n                <span className={s.total__user}>Total User: {totalUsers}</span>\n            </div>\n            {error && <span className={s.message__error}>Имя должно быть больше 0 символов</span>}\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {Dispatch, EventHandler, FC, ReactEventHandler, SetStateAction, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name:string) => void\n    setLog: (newLog:string) => void\n}\n\nconst GreetingContainer: FC<GreetingContainerPropsType> = ({users, addUserCallback, setLog}) => {\n    const [name, setName] = useState<string>('')\n    const [error, setError] = useState<boolean>(false)\n    const currDate = () => (new Date().toLocaleTimeString())\n    const setNameCallback = (e: React.ChangeEvent<HTMLInputElement>):void => {\n        setError(false)\n        setName(e.target.value)\n    }\n    const addUser = (name:string):void => {\n        if (name.length) {\n            addUserCallback(name)\n            alert(`Привет ${name}`)\n            setLog(`(${currDate()}) Пользователь ${name} уcпешно добавлен`)\n            setName('')\n        } else {\n            setLog(`(${currDate()}) Введено пустое имя`)\n            setError(true)\n        }\n    }\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React from \"react\";\nimport s from './Greeting.module.css'\n\ntype AlternativeGreetingType = {\n    log: Array<string>\n}\n\nfunction AlternativeGreeting(props:AlternativeGreetingType) {\n    const drawLog = props.log.map((data:string) => {\n        if (data.length === 29) {\n            return <><i className={s.error_log}>{data}<br/></i></>\n        } else {\n            return <><i className={s.success_log}>{data}<br/></i></>\n        }\n    })\n    return (\n        <div className={s.wrapper__log}>\n            {drawLog}\n        </div>\n    );\n}\n\nexport default AlternativeGreeting;\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v4 as generateUuid} from 'uuid'\nimport AlternativeGreeting from \"./AlternativeGreeting\";\n\n\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n    const [log, setLog] = useState<Array<string>>([])\n\n    const addUserCallback = (name: string):void => {\n        setUsers([...users, {\n            _id: generateUuid(),\n            name: name\n        }])\n    }\n\n    const addLog = (newLog:string):void => {\n        setLog([...log, newLog])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n            <GreetingContainer\n                users={users}\n                addUserCallback={addUserCallback}\n                setLog={addLog}\n            />\n\n            <hr/>\n            <AlternativeGreeting\n                log={log}\n            />\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = ` ${s.defaultStyle} ${className} ${error && s.errorInput}`\n\n    return (\n        <div className={s.super__input}>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </div>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className, children,\n        disabled,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className} ${disabled && s.disabled}`\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        >{children}</button>\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children,\n        checked,// в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n\n        onChangeChecked && onChangeChecked(!checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {setChecked(e.currentTarget.checked)}\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            {/*<Switch>*/}\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\n\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            {/*<Route render={() => <Error404/>}/>*/}\n\n            {/*</Switch>*/}\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            {/*<HashRouter>*/}\n\n            <Header/>\n\n            <Routes/>\n\n            {/*</HashRouter>*/}\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport {HW1} from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW5/>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}